# syntax=docker.io/docker/dockerfile:1.17.1

# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

ARG cuda_version=12.6
ARG pytorch_version=2.7.0

FROM pytorch/pytorch:${pytorch_version}-cuda${cuda_version}-cudnn9-runtime

ENV CMAKE_BUILD_PARALLEL_LEVEL "8"
ENV COMFY_VERSION "0.3.45"
ENV CUDA_VERSION "12.6"
ENV DEBIAN_FRONTEND "noninteractive"
ENV PIP_PREFER_BINARY "1"

# Set a non-root user and group
ARG UID=10000
ARG GID=10000
ARG USER=comfyuser
ARG GROUP=comfygroup

# Set the working directory for the application
ENV COMFY_DIR "/home/${USER}/comfy"
WORKDIR ${COMFY_DIR}

# Create the group and user
RUN groupadd --gid ${GID} ${GROUP} \ 
  && useradd --uid ${UID} --gid ${GID} -m ${USER} \
  && chown -R ${USER}:${GROUP} /home/${USER}

SHELL ["/bin/bash", "-c"]

RUN apt-get update \
  && apt-get install --yes \
  curl \
  gettext \
  git \
  libglib2.0-0 \
  unzip \
  wget \
  && apt clean --yes \ 
  && rm --force --recursive /var/lib/apt/lists/* \
  && pip install --no-cache-dir uv \ 
  && uv pip install --no-cache-dir --system comfy-cli

USER ${USER}

ENV COMFY_HOME "${COMFY_DIR}/ComfyUI"
ENV PATH "/home/${USER}/.local/bin:${PATH}"

RUN comfy --skip-prompt --workspace=${COMFY_DIR} tracking disable \
  && comfy --skip-prompt --workspace=${COMFY_HOME} install --cuda-version=${CUDA_VERSION} --nvidia --version=${COMFY_VERSION} \
  && comfy --skip-prompt set-default ${COMFY_HOME}

COPY --chown=${USER}:${GROUP} --chmod=700 --from=comfyui entrypoint.sh ./

ENV BASE ""
ENV INPUT_DIR "${COMFY_HOME}/input"
ENV MODEL_DIR "${COMFY_HOME}/models"
ENV OUTPUT_DIR "${COMFY_HOME}/output"
ENV WORKFLOWS_DIR "${COMFY_HOME}/user/default/workflows"

ENV COMFYUI_HOST "0.0.0.0"
ENV COMFYUI_PORT "8188"

ARG COMFYUI_CUSTOM_NODE_PATH="${COMFY_HOME}/custom_nodes"

COPY --chown=${USER}:${GROUP} --chmod=700 --from=custom_nodes ./google_genmedia ${COMFYUI_CUSTOM_NODE_PATH}/google-genmedia 

RUN pip install -r ${COMFYUI_CUSTOM_NODE_PATH}/google-genmedia/requirements.txt

RUN comfy node install ComfyUI-VideoHelperSuite@nightly
RUN comfy node install ComfyUI-Custom-Scripts@nightly
RUN comfy node install	https://github.com/raindrop313/ComfyUI-WanVideoStartEndFrames
RUN comfy node install	https://github.com/kijai/ComfyUI-WanVideoWrapper
RUN comfy node install	https://github.com/kijai/ComfyUI-segment-anything-2
RUN comfy node install	https://github.com/kijai/ComfyUI-KJNodes
RUN comfy node install	https://github.com/rgthree/rgthree-comfy
RUN comfy node install	https://github.com/pharmapsychotic/comfy-cliption
RUN comfy node install	https://github.com/avenstack/ComfyUI-AV-LatentSync
RUN comfy node install	https://github.com/MicheleGuidi/ComfyUI-Contextual-SAM2
RUN comfy node install	https://github.com/Fannovel16/comfyui_controlnet_aux
RUN comfy node install	https://github.com/cubiq/ComfyUI-Crystools
RUN comfy node install	https://github.com/pythongosssss/ComfyUI-Custom-Scripts
RUN comfy node install	https://github.com/yolain/ComfyUI-Easy-Use
RUN comfy node install	https://github.com/ZHO-ZHO-ZHO/ComfyUI-Elegant-Resource-Monitor
RUN comfy node install	https://github.com/cubiq/ComfyUI_essentials
RUN comfy node install	https://github.com/Sephorax/ComfyUI_FaceAnalysis
RUN comfy node install	https://github.com/FizzleDorf/ComfyUI_Fast_Style_Transfer
RUN comfy node install	https://github.com/laksjdjf/ComfyUI-Florence2
RUN comfy node install	https://github.com/Fannovel16/comfyui_frame_interpolation
RUN comfy node install	https://github.com/kijai/ComfyUI-Get-Meta
RUN comfy node install	https://github.com/city96/ComfyUI-GGUF
RUN comfy node install	https://github.com/ltdrdata/ComfyUI-Impact-Pack
RUN comfy node install	https://github.com/KoreTeknology/ComfyUI-Inpaint-CropAndStitch
RUN comfy node install	https://github.com/RuolinZheng08/ComfyUI-Inpaint-Anything
RUN comfy node install	https://github.com/Acly/comfyui-interactive-segmentation
RUN comfy node install	https://github.com/cubiq/ComfyUI_IPAdapter_plus
RUN comfy node install	https://github.com/ZHO-ZHO-ZHO/ComfyUI_IPAdapter_plus_V2
RUN comfy node install	https://github.com/iToolsTech/ComfyUI-iTools
RUN comfy node install	https://github.com/KLingAI/ComfyUI-KLingAI-API
RUN comfy node install	https://github.com/smilecase/ComfyUI_LayerStyle_Advance
RUN comfy node install	https://github.com/utls/ComfyUI-LogicNodes
RUN comfy node install	https://github.com/Comfy-Org/ComfyUI-Manager
RUN comfy node install	https://github.com/Gourieff/ComfyUI_MediaMixer
RUN comfy node install	https://github.com/gokayfem/ComfyUI_memory_cleanup
RUN comfy node install	https://github.com/ltdrdata/ComfyUI-Model-Downloader
RUN comfy node install	https://github.com/ShmuelRonen/ComfyUI-NormalCrafterWrapper
RUN comfy node install	https://github.com/stavsap/comfyui-ollama
RUN comfy node install	https://github.com/KoreTeknology/ComfyUI_ProPainter_Nodes
RUN comfy node install	https://github.com/neverbiasu/ComfyUI-SAM2
RUN comfy node install	https://github.com/storyicon/comfyui_segment_anything
RUN comfy node install	https://github.com/EvilBT/ComfyUI_slk_joy_caption_two
RUN comfy node install	https://github.com/kijai/ComfyUI-SUPIR
RUN comfy node install	https://github.com/ssitu/ComfyUI_UltimateSDUpscale
RUN comfy node install	https://github.com/city96/ComfyUI-GGUF
RUN comfy node install	https://github.com/Kosinkadink/ComfyUI-VideoHelperSuite
RUN comfy node install	https://github.com/Derfuu/Derfuu_ComfyUI_ModdedNodes
RUN comfy node install	https://github.com/oneTaskAI/flux-context-comfyui
RUN comfy node install	https://github.com/calcuis/gguf
RUN comfy node install	https://github.com/LarryJane491/Lora-Training-in-Comfy
RUN comfy node install	https://github.com/EmanuelRiquelme/masquerade-nodes-comfyui
RUN comfy node install	https://github.com/WASasquatch/PowerNoiseSuite
RUN comfy node install	https://github.com/marhensa/sdxl-recommended-res-calc
RUN comfy node install	https://github.com/shiertier/ComfyUI-TeaCache-lumina2
RUN comfy node install	https://github.com/XLabs-AI/x-flux-comfyui
RUN comfy node install	https://github.com/chrisgoringe/cg-use-everywhere
RUN comfy node install	https://github.com/Conor-Collins/ComfyUI-CoCoTools_IO

# Install Python deps for all installed custom nodes that ship a requirements file
RUN set -euo pipefail \
 && shopt -s nullglob \
 && REQS=( "${COMFY_HOME}"/custom_nodes/*/requirements*.txt ) \
 && if [ ${#REQS[@]} -gt 0 ]; then \
      echo "Installing Python deps for ${#REQS[@]} custom nodes"; \
      for req in "${REQS[@]}"; do \
        echo ">>> pip install -r ${req}"; \
        pip install --no-cache-dir -r "${req}" || { echo "WARN: failed ${req}, continuing"; }; \
      done; \
    else \
      echo "No requirements.txt files found under ${COMFY_HOME}/custom_nodes"; \
    fi


ENTRYPOINT  [ "./entrypoint.sh" ]
CMD ["--", "--listen=${COMFYUI_HOST}", "--port=${COMFYUI_PORT}"]
